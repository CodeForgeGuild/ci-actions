name: Release

on:
  workflow_call:
    secrets:
      GH_TOKEN:
        required: true

permissions:
  contents: write
  pull-requests: read

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags

          TAG=$(git tag --list "v*.*.*" --sort=-v:refname | head -n 1)

          if [ -z "$TAG" ]; then
            TAG="v0.0.0"
          fi

          echo "Last tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Detect bump type
        id: bump_type
        run: |
          TYPE="patch" # valor por defecto
          LABELS="${{ join(github.event.pull_request.labels.*.name, ' ') }}"
          if echo "$LABELS" | grep -q "increment-major"; then
            TYPE="major"
          elif echo "$LABELS" | grep -q "increment-minor"; then
            TYPE="minor"
          fi
          echo "Release type: $TYPE"
          echo "type=$TYPE" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump
        run: |
          OLD_TAG=${{ steps.get_tag.outputs.tag }}
          IFS='.' read -r -a PARTS <<< "${OLD_TAG#v}"
          MAJOR=${PARTS[0]}
          MINOR=${PARTS[1]}
          PATCH=${PARTS[2]}

          TYPE=${{ steps.bump_type.outputs.type }}
          if [ "$TYPE" = "major" ]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [ "$TYPE" = "minor" ]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi

          NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_TAG"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          git tag ${{ steps.bump.outputs.new_tag }}
          git push origin ${{ steps.bump.outputs.new_tag }}

      - name: Update movable tags
        run: |
          NEW_TAG=${{ steps.bump.outputs.new_tag }}
          IFS='.' read -r MAJOR MINOR PATCH <<< "${NEW_TAG#v}"

          git tag -f "v$MAJOR"
          git tag -f "v$MAJOR.$MINOR"

          git push origin -f "v$MAJOR"
          git push origin -f "v$MAJOR.$MINOR"


      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump.outputs.new_tag }}
          name: "Release ${{ steps.bump.outputs.new_tag }}"
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}